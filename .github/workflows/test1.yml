# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      ARM_CLIENT_ID:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'ARM CLIENT ID'
        # Default value if no value is explicitly provided
        default: '0854efab-9245-4e7e-997c-2c6efe5140fc'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      ARM_CLIENT_SECRET:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'ARM CLIENT SECRET'
        # Default value if no value is explicitly provided
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      ARM_SUBSCRIPTION_ID:
        description: 'ARM SUBSCRIPTION ID'
        default: '0b5b13b8-0ad7-4552-936f-8fae87e0633f'        
        required: true        
        type: string
      ARM_TENANT_ID:
        description: 'ARM TENANT ID'
        default: 'ac20add1-ffda-45c1-adc5-16a0db15810f'
        required: true            
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }} - ${{ inputs.ARM_CLIENT_ID }}"
    - name: azure login
      run: |
        # az login --identity
        # login with service-principal
        echo "login with service-principal"
        az login --service-principal -u "${{ inputs.ARM_CLIENT_ID }}" -p "${{ inputs.ARM_CLIENT_SECRET }}" --tenant "${{ inputs.ARM_TENANT_ID }}" 
        az account set --subscription "${{ inputs.ARM_SUBSCRIPTION_ID }}"
        export ARM_SUBSCRIPTION_ID="${{ inputs.ARM_SUBSCRIPTION_ID }}"
        export ARM_TENANT_ID="${{ inputs.ARM_TENANT_ID }}"
        export ARM_CLIENT_ID="${{ inputs.ARM_CLIENT_ID }}"
        export ARM_CLIENT_SECRET="${{ inputs.ARM_CLIENT_SECRET }}"
        echo get current account information
        ACCOUNT_INFO=$(az account show 2> /dev/null)
        SUB_ID=$(echo "$ACCOUNT_INFO" | jq ".id" -r)
        SUB_NAME=$(echo "$ACCOUNT_INFO" | jq ".name" -r)
        echo "Subscription Id: ${SUB_ID}"
        echo "Subscription Name: ${SUB_NAME}"
      
